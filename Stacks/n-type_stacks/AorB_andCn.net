*cfr3-Cand(AorB)n -- Independent signal generators and Vdd power supply
*((AorB)andC)n

.INCLUDE ../../45nm_MGK.pm
.OPTIONS GMIN=1e-020 ABSTOL=1e-018

.PARAM Lmin=45n
.PARAM Ldiff=90n
.PARAM Wmin=45n

Vdd alim 0
Va A 0
Vb B 0
Vc C 0

Mn1 SD1 	A 	0 	0 	nmos W={2*Wmin} L={Lmin} AS={Ldiff*2*Wmin} AD={Ldiff*2*Wmin} PS={2*(Ldiff+2*Wmin)} PD={2*(Ldiff+2*Wmin)}
Mn2 SD1 	B 	0 	0 	nmos W={2*Wmin} L={Lmin} AS={Ldiff*2*Wmin} AD={Ldiff*2*Wmin} PS={2*(Ldiff+2*Wmin)} PD={2*(Ldiff+2*Wmin)}
Mn3 alim 	C 	SD1 	0 	nmos W={2*Wmin} L={Lmin} AS={Ldiff*2*Wmin} AD={Ldiff*2*Wmin} PS={2*(Ldiff+2*Wmin)} PD={2*(Ldiff+2*Wmin)}

.CONTROL
let Ldiff=90n
foreach Vddbasic 1.0 

echo Vdd basic = $Vddbasic
alter Vdd = $Vddbasic
foreach width 45n
	echo 
	echo
	echo WMIN=$width
	echo
	
   
	*	alter Cout ic = $Vddbasic
	    		foreach input 0 $Vddbasic
 	        	alter Va = $input
 	        		foreach input 0 $Vddbasic
		        		alter Vb = $input
			    			foreach input 0 $Vddbasic
			       				 alter Vc = $input
		            *if not(@Vdd[DC] & @Vb[DC] & (@Va[DC] or @Vc[DC]))
			        *show Cout : ic
		echo DC Analysis at 30C and 90C
		            dc TEMP 30 90 60
			        print V(SD1) ((V(A)*(I(Va))+V(B)*(I(Vb))+V(C)*(I(Vc))+V(alim)*(I(Vdd)))) V(alim) V(A) V(B) V(C)

		set filetype=ascii
		set wr_singlescale
		set wr_vecnames
		set appendwrite
		wrdata AorB_andCn.txt V(SD1) ((V(A)*(I(Va))+V(B)*(I(Vb))+V(C)*(I(Vc))+V(alim)*(I(Vdd)))) V(alim) V(A) V(B) V(C)
			        *dc TEMP 30 90 60 Vdd 0.8 1.2 0.1 
			        *print V(SD1) V(alim) V(A) V(B) V(C) V(SD) I(Va) I(Vb)  I(Vc) I(Vdd) (abs(I(Va))+abs(I(Vb))+abs(I(Vc))+abs(I(Vdd)))
			        end
			end	
	    	end
	end
end
.ENDC
.END
