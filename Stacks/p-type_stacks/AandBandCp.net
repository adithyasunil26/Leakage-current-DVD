*cfr1inv-((CorD)andBandA)p -- Independent signal generators and Vdd power supply
*(AandBandC)p

.INCLUDE ../../45nm_MGK.pm
.OPTIONS GMIN=1e-020 ABSTOL=1e-018

.PARAM Lmin=45n
.PARAM Ldiff=90n
.PARAM Wmin=45n

Vdd alim 0
Va A 0
Vb B 0
Vc C 0

Mp1 	SD1 	A 	alim 	alim 	pmos 	W={6*Wmin} L={Lmin} AS={Ldiff*6*Wmin} AD={Ldiff*6*Wmin} PS={2*(Ldiff+6*Wmin)} PD={2*(Ldiff+6*Wmin)}
Mp2 	SD2 	B 	SD1 	alim 	pmos 	W={6*Wmin} L={Lmin} AS={Ldiff*6*Wmin} AD={Ldiff*6*Wmin} PS={2*(Ldiff+6*Wmin)} PD={2*(Ldiff+6*Wmin)}
Mp3 	0 	C 	SD2 	alim 	pmos 	W={6*Wmin} L={Lmin} AS={Ldiff*6*Wmin} AD={Ldiff*6*Wmin} PS={2*(Ldiff+6*Wmin)} PD={2*(Ldiff+6*Wmin)}

.CONTROL
let Ldiff=90n
foreach Vddbasic 1.0
echo Vdd basic = $Vddbasic
alter Vdd = $Vddbasic
foreach width 45n
echo 
echo
	echo WMIN=$width
	echo

	
							*    foreach input 0 $Vddbasic
							*	    alter Vdd= $input
							**alter Cout ic = $input
		foreach input 0 $Vddbasic
 	        alter Va = $input
 	        	foreach input 0 $Vddbasic
		        alter Vb = $input
		        	foreach input 0 $Vddbasic
			        alter Vc = $input
					    *   if not(@Vdd[DC] & not(@Va[DC]) & not(@Vb[DC]) & not(@Vc[DC]))
			                    *   alter Cout ic = $Vddbasic
		                        *else
			                    *    alter Cout ic = 0
		                        *end
		                        *show Cout : ic
			echo DC Analysis at 30C and 90C
		        dc TEMP 30 90 60
			print V(SD1) V(SD2)  ((V(A)*I(Va))+(V(B)*I(Vb))+(V(C)*I(Vc))+ (V(alim)*I(Vdd))) V(alim) V(A) V(B) V(C)

			set filetype=ascii
			set wr_singlescale
			set wr_vecnames
			set appendwrite
			wrdata AandBandCp.txt V(SD1) V(SD2)  ((V(A)*I(Va))+(V(B)*I(Vb))+(V(C)*I(Vc))+ (V(alim)*I(Vdd))) V(alim) V(A) V(B) V(C)
			                    *nota: somma delle pootenze con segni perkï¿½ tutta la potenza dei generatori si dissipa sul carico compreso...
					            *dc TEMP 30 90 60 Vdd 0.8 1.2 0.1 
			                    *print V(alim) V(A) V(B) V(C) V(SD) V(SD2)  I(Va) I(Vb)  I(Vc) I(Vdd) (abs(I(Va))+abs(I(Vb))+abs(I(Vc))+abs(I(Vdd)))
				end
			end	
		end
	end	
end
.ENDC
.END
